<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tjdzj.www.dao.LstandardsDao">
	<!-- resultMap属性：type为java实体类；id为此resultMap的标识。 -->


	<resultMap type="Lstandards" id="lstandards">
		<result property="lstandardsId" column="_lstandardsId" />
		<result property="lstandardsNumber" column="_lstandardsNumber" />
		<result property="lstandardsTitle" column="_lstandardsTitle" />
		<result property="lstandardsETitle" column="_lstandardsETitle" />
		<result property="lstandardsContent" column="_lstandardsContent" />
		<result property="lstandardsSTime" column="_lstandardsSTime" />
		<result property="lstandardsITime" column="_lstandardsITime" />
		<result property="lstandardsETime" column="_lstandardsETime" />
		<result property="lstandardsUTime" column="_lstandardsUTime" />
		<result property="lstandardsPublishUser" column="_lstandardsPublishUser" />
		<result property="lstandardsProvince" column="_lstandardsProvince" />
		<result property="lstandardsParentUnit" column="_lstandardsParentUnit" />
		<result property="lstandardsPublishUserId" column="_lstandardsPublishUserId" />
		<result property="lstandardsCategory" column="_lstandardsCategory" />
		<result property="numCount" column="numCount"/>
	</resultMap>


	<insert id="insertLstandards" parameterType="Lstandards">  
     <![CDATA[ 
        insert into b_lstandards(_lstandardsId,
        _lstandardsTitle,
        _lstandardsETitle,
        _lstandardsNumber,
        _lstandardsContent,
        _lstandardsSTime,
        _lstandardsITime,
        _lstandardsETime,
        _lstandardsUTime,
        _lstandardsPublishUser,
        _lstandardsProvince,
        _lstandardsParentUnit,
        _lstandardsPublishUserId,
		_lstandardsCategory) 
        values(#{lstandardsId},
        #{lstandardsTitle},
        #{lstandardsETitle},
        #{lstandardsNumber},
        #{lstandardsContent},
        #{lstandardsSTime},
        #{lstandardsITime},
        #{lstandardsETime},
        #{lstandardsUTime},
        #{lstandardsPublishUser},
        #{lstandardsProvince},
        #{lstandardsParentUnit},
        #{lstandardsPublishUserId},
		#{lstandardsCategory}) 
        ]]>
	</insert>
	
	<update id="updateLstandards" parameterType="Lstandards">
		update b_lstandards
		set 
		_lstandardsNumber=#{lstandardsNumber}
		,_lstandardsTitle=#{lstandardsTitle}
		,_lstandardsETitle=#{lstandardsETitle}
		,_lstandardsContent=#{lstandardsContent}
		,_lstandardsSTime=#{lstandardsSTime}
		,_lstandardsITime=#{lstandardsITime}
		,_lstandardsETime=#{lstandardsETime}
		,_lstandardsUTime=#{lstandardsUTime}
		,_lstandardsPublishUser=#{lstandardsPublishUser}
		,_lstandardsProvince=#{lstandardsProvince}
		,_lstandardsParentUnit=#{lstandardsParentUnit}
		,_lstandardsPublishUserId=#{lstandardsPublishUserId}
		,_lstandardsCategory=#{lstandardsCategory}
		where _lstandardsId=#{lstandardsId}
	</update>
	
	<delete id="deleteLstandards" parameterType="int">
		delete from	b_lstandards where _lstandardsId=#{approvedId}
	</delete>
	
	<select id="findLstandardsAll" resultMap="lstandards">
		select * from b_lstandards
	</select>

	<select id="findLstandardsByid" parameterType="int" resultMap="lstandards">
		select * from b_lstandards where _lstandardsId=#{lstandardsId}
	</select>

	

	<select id="findAllCount" resultType="int">
		select count(*) from
		b_lstandards
	</select>
	
	<select id="findByParentUnitCount" parameterType="map" resultType="int">
		select count(*) from b_lstandards  where _lstandardsProvince=#{inchargeMent} or _lstandardsParentUnit = #{inchargeMent}
		
	</select>
	
	<select id="findUserCount" resultType="int">
		select count(*) from
		b_lstandards where _lstandardsPublishUserId=#{lstandardsPublishUserId}
	</select>
	
	
	
	<select id="findLstandardsByUser" parameterType="map" resultMap="lstandards">
		select * from b_lstandards where _lstandardsPublishUserId = #{userId}
		<if test="titleQuery !=null and titleQuery!=''">
				And _lstandardsTitle like CONCAT('%','${titleQuery}','%' ) 
			</if>
			<if test="categoryQuery !=null and categoryQuery!=''">
				And _lstandardsCategory = '${categoryQuery}' 
			</if>
			<if test="startTimeQuery !=null and startTimeQuery !='' and endTimeQuery!=null and endTimeQuery!=''">
				And (UNIX_TIMESTAMP(_lstandardsUTime) BETWEEN UNIX_TIMESTAMP(#{startTimeQuery}) AND UNIX_TIMESTAMP(#{endTimeQuery}))
			</if>
		<if test="fieldQuery == 0">
			order by _lstandardsUTime desc
		</if>
		<if test="fieldQuery!=0">
			<if test="fieldQuery == 1">
				order by _lstandardsNumber 
			</if>
			<if test="fieldQuery == 2">
				order by _lstandardsTitle 
			</if>
			<if test="fieldQuery == 3">
				order by _lstandardsSTime 
			</if>
			<if test="fieldQuery == 4">
				order by _lstandardsITime 
			</if>
			<if test="fieldQuery == 5">
				order by _lstandardsETime 
			</if>
			<if test="fieldQuery == 6">
				order by _lstandardsPublishUser 
			</if>
			<if test="orderQuery == 1">
				desc
			</if>
			<if test="orderQuery == 2">
				asc
			</if>
		</if>
		<if test="intPageCount !=null and pageSize !=null">
		limit #{intPageCount},#{pageSize}
		</if>
	</select>
	
	<select id="findByParentUnit" parameterType="map" resultMap="lstandards">
		select * from b_lstandards where _lstandardsProvince = #{inchargeMent} or _lstandardsParentUnit = #{inchargeMent}
		<if test="titleQuery !=null and titleQuery!=''">
				And _lstandardsTitle like CONCAT('%','${titleQuery}','%' ) 
			</if>
			<if test="categoryQuery !=null and categoryQuery!=''">
				And _lstandardsCategory = '${categoryQuery}' 
			</if>
			<if test="startTimeQuery !=null and startTimeQuery !='' and endTimeQuery!=null and endTimeQuery!=''">
				And (UNIX_TIMESTAMP(_lstandardsUTime) BETWEEN UNIX_TIMESTAMP(#{startTimeQuery}) AND UNIX_TIMESTAMP(#{endTimeQuery}))
			</if>
		<if test="fieldQuery == 0">
			order by _lstandardsProvince desc
		</if>
		<if test="fieldQuery!=0">
			<if test="fieldQuery == 1">
				order by _lstandardsNumber 
			</if>
			<if test="fieldQuery == 2">
				order by _lstandardsTitle 
			</if>
			<if test="fieldQuery == 3">
				order by _lstandardsSTime 
			</if>
			<if test="fieldQuery == 4">
				order by _lstandardsITime 
			</if>
			<if test="fieldQuery == 5">
				order by _lstandardsETime 
			</if>
			<if test="fieldQuery == 6">
				order by _lstandardsPublishUser 
			</if>
			<if test="orderQuery == 1">
				desc
			</if>
			<if test="orderQuery == 2">
				asc
			</if>
		</if>
		<if test="intPageCount !=null and pageSize !=null">
		limit #{intPageCount},#{pageSize}
		</if>
	</select>
	
	<select id="findLstandardsByAll" parameterType="map" resultMap="lstandards">
		select
		* from b_lstandards 
		<where>
			<if test="titleQuery !=null and titleQuery!=''">
				And _lstandardsTitle like CONCAT('%','${titleQuery}','%' ) 
			</if>
			<if test="categoryQuery !=null and categoryQuery!=''">
				And _lstandardsCategory = '${categoryQuery}' 
			</if>
			<if test="startTimeQuery !=null and startTimeQuery !='' and endTimeQuery!=null and endTimeQuery!=''">
				And (UNIX_TIMESTAMP(_lstandardsUTime) BETWEEN UNIX_TIMESTAMP(#{startTimeQuery}) AND UNIX_TIMESTAMP(#{endTimeQuery}))
			</if>
			<if test="provinceQuery !=null and provinceQuery!=''">
				And _lstandardsParentUnit = #{provinceQuery}
			</if>
		</where>
		<if test="fieldQuery == 0">
			order by _lstandardsUTime desc
		</if>
		<if test="fieldQuery!=0">
			<if test="fieldQuery == 1">
				order by _lstandardsNumber 
			</if>
			<if test="fieldQuery == 2">
				order by _lstandardsTitle 
			</if>
			<if test="fieldQuery == 3">
				order by _lstandardsSTime 
			</if>
			<if test="fieldQuery == 4">
				order by _lstandardsITime 
			</if>
			<if test="fieldQuery == 5">
				order by _lstandardsETime 
			</if>
			<if test="fieldQuery == 6">
				order by _lstandardsPublishUser 
			</if>
			<if test="orderQuery == 1">
				desc
			</if>
			<if test="orderQuery == 2">
				asc
			</if>
		</if>
		<if test="intPageCount !=null and pageSize !=null">
		limit #{intPageCount},#{pageSize}
		</if>
	</select>
	
	<select id="findProvinceCount" parameterType="String" resultType="int">
		select count(*) from b_lstandards  where _lstandardsProvince=#{inchargeMent} or _lstandardsParentUnit = #{inchargeMent}
	</select>

	<select id="findTopTen" resultMap="lstandards">
		select * from b_lstandards order by _lstandardsUTime desc limit 0,6
	</select>
	
	<select id="findByCount" parameterType="map" resultMap="lstandards">
		select count(_lstandardsId) as numCount ,_lstandardsProvince  from b_lstandards
		<where>
			<if test="yearsQuery !=null and yearsQuery !=''">
				<![CDATA[AND  left(_lstandardsUTime,4) = #{yearsQuery}]]>
			</if>
			<if test="province !=null and province !=''">
				And _lstandardsProvince = #{province}
			</if>
		</where>
		group by _lstandardsProvince
	</select>

</mapper>